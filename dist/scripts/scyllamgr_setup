#!/usr/bin/env bash
#
# Copyright 2017 ScyllaDB
#

set -eu -o pipefail

is_systemd() {
    grep -q '^systemd$' /proc/1/comm
}

interactive_ask_service() {
    echo $1
    echo $2
    while true; do
        if [ "$3" == "yes" ]; then
        prompt="[YES/no]"
        elif [ "$3" == "no" ]; then
        prompt="[yes/NO]"
        else
        prompt="[yes/no]"
        fi
        result=""
        while [ x == x"$result" ]; do
            read -p $prompt ans
            if [ x == x"$ans" ]; then
                result="$3"
            else
                result="$ans"
            fi
        done
        case $(echo $result | tr '[:upper:]' '[:lower:]') in
            "y" | "yes")
                return 1
                ;;
            "n" | "no")
                return 0
                ;;
        esac
    done
}

if [[ "$(id -u)" != "0" ]]; then
    echo "Requires root permission."
    exit 1
fi

ENABLE_SCYLLA=0
ENABLE_SERVICE=1
ENABLE_CHECK_FOR_UPDATES=1

if [[ $# != 0 ]]; then
    INTERACTIVE=0
else
    INTERACTIVE=1
fi

if [[ ${INTERACTIVE} == 1 ]]; then
    if [[ -f /usr/lib/scylla/scylla_setup ]]; then
        interactive_ask_service "Do you want to configure and enable the local ScyllaDB instance as a backend storage for this Scylla Manager installation?" "Answer yes to configure and automatically start ScyllaDB when the node boots; answer no to skip this step." "yes" &&:
        ENABLE_SCYLLA=$?
    fi
    interactive_ask_service "Do you want to enable Scylla Manager?" "Answer yes to automatically start Scylla Manager when the node boots; answer no to skip this step." "yes" &&:
    ENABLE_SERVICE=$?
    interactive_ask_service "Do you want to enable Scylla Manager to automatically check for updates?" "Yes - start the Scylla Manager housekeeping service to check for a newer version. This check runs periodically. No - skips this step." "yes" &&:
    ENABLE_CHECK_FOR_UPDATES=$?
fi

if [[ ${ENABLE_SCYLLA} == 1 ]]; then
    /usr/lib/scylla/scylla_dev_mode_setup --developer-mode 1
    if is_systemd; then
        systemctl enable scylla-server.service
    fi
fi

if [[ ${ENABLE_SERVICE} == 1 ]]; then
    if is_systemd; then
        systemctl enable scylla-manager.service
    fi
fi

if [[ ${ENABLE_CHECK_FOR_UPDATES} == 1 ]]; then
    if is_systemd; then
        systemctl enable scylla-manager-check-for-updates.timer
        systemctl start scylla-manager-check-for-updates.timer
    fi
fi

systemctl daemon-reload

echo "Scylla Manager setup finished."
